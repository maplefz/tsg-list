{"version":3,"file":"es-xhr-promise.js","sources":["../src/parse-headers.coffee","../src/index.coffee"],"sourcesContent":["trim = (s) ->\n  s.replace(/^\\s*|\\s*$/g, '');\n\nisArray = (obj) ->\n  Object::toString.call(obj) == '[object Array]'\n\nexport default parseHeaders = (headers) ->\n  return {} unless headers\n\n  result = {}\n\n  for row in trim(headers).split('\\n')\n    index = row.indexOf(':')\n    key = trim(row.slice(0, index)).toLowerCase()\n    value = trim(row.slice(index + 1))\n    if typeof result[key] == 'undefined'\n      result[key] = value\n    else if isArray(result[key])\n      result[key].push value\n    else\n      result[key] = [\n        result[key]\n        value\n      ]\n    return\n  result\n","###\n# Copyright 2015 Scott Brady\n# MIT License\n# https://github.com/scottbrady/xhr-promise/blob/master/LICENSE\n###\n\nimport Promise      from 'broken'\nimport objectAssign from 'es-object-assign'\nimport parseHeaders from './parse-headers'\n\ndefaults =\n  method:   'GET'\n  headers:  {}\n  data:     null\n  username: null\n  password: null\n  async:    true\n\n###\n# Module to wrap an XhrPromise in a promise.\n###\nclass XhrPromise\n\n  @DEFAULT_CONTENT_TYPE: 'application/x-www-form-urlencoded; charset=UTF-8'\n\n  @Promise: Promise\n\n  ##########################################################################\n  ## Public methods #######################################################\n  ########################################################################\n\n  ###\n  # XhrPromise.send(options) -> Promise\n  # - options (Object): URL, method, data, etc.\n  #\n  # Create the XHR object and wire up event handlers to use a promise.\n  ###\n  send: (options = {}) ->\n    options = objectAssign {}, defaults, options\n\n    new Promise (resolve, reject) =>\n      unless XMLHttpRequest\n        @_handleError 'browser', reject, null, \"browser doesn't support XMLHttpRequest\"\n        return\n\n      if typeof options.url isnt 'string' || options.url.length is 0\n        @_handleError 'url', reject, null, 'URL is a required parameter'\n        return\n\n      # XMLHttpRequest is supported by IE 7+\n      @_xhr = xhr = new XMLHttpRequest()\n\n      # success handler\n      xhr.onload = =>\n        @_detachWindowUnload()\n\n        try\n          responseText = @_getResponseText()\n        catch\n          @_handleError 'parse', reject, null, 'invalid JSON response'\n          return\n\n        resolve\n          url:          @_getResponseUrl()\n          headers:      @_getHeaders()\n          responseText: responseText\n          status:       xhr.status\n          statusText:   xhr.statusText\n          xhr:          xhr\n\n      # error handlers\n      xhr.onerror   = => @_handleError 'error',   reject\n      xhr.ontimeout = => @_handleError 'timeout', reject\n      xhr.onabort   = => @_handleError 'abort',   reject\n\n      @_attachWindowUnload()\n\n      xhr.open options.method, options.url, options.async, options.username, options.password\n\n      if options.data? && !options.headers['Content-Type']\n        options.headers['Content-Type'] = @constructor.DEFAULT_CONTENT_TYPE\n\n      for header, value of options.headers\n        xhr.setRequestHeader(header, value)\n\n      try\n        xhr.send(options.data)\n      catch e\n        @_handleError 'send', reject, null, e.toString()\n\n  ###\n  # XhrPromise.getXHR() -> XhrPromise\n  ###\n  getXHR: -> @_xhr\n\n  ##########################################################################\n  ## Psuedo-private methods ###############################################\n  ########################################################################\n\n  ###\n  # XhrPromise._attachWindowUnload()\n  #\n  # Fix for IE 9 and IE 10\n  # Internet Explorer freezes when you close a webpage during an XHR request\n  # https://support.microsoft.com/kb/2856746\n  #\n  ###\n  _attachWindowUnload: ->\n    @_unloadHandler = @_handleWindowUnload.bind(@)\n    window.attachEvent 'onunload', @_unloadHandler if window.attachEvent\n\n  ###\n  # XhrPromise._detachWindowUnload()\n  ###\n  _detachWindowUnload: ->\n    window.detachEvent 'onunload', @_unloadHandler if window.detachEvent\n\n  ###\n  # XhrPromise._getHeaders() -> Object\n  ###\n  _getHeaders: ->\n    parseHeaders @_xhr.getAllResponseHeaders()\n\n  ###\n  # XhrPromise._getResponseText() -> Mixed\n  #\n  # Parses response text JSON if present.\n  ###\n  _getResponseText: ->\n    # Accessing binary-data responseText throws an exception in IE9\n    responseText = if typeof @_xhr.responseText is 'string' then @_xhr.responseText else ''\n\n    switch @_xhr.getResponseHeader('Content-Type')\n      when 'application/json', 'text/javascript'\n        # Workaround Android 2.3 failure to string-cast null input\n        responseText = JSON.parse(responseText + '')\n\n    responseText\n\n  ###\n  # XhrPromise._getResponseUrl() -> String\n  #\n  # Actual response URL after following redirects.\n  ###\n  _getResponseUrl: ->\n    return @_xhr.responseURL if @_xhr.responseURL?\n\n    # Avoid security warnings on getResponseHeader when not allowed by CORS\n    return @_xhr.getResponseHeader('X-Request-URL') if /^X-Request-URL:/m.test(@_xhr.getAllResponseHeaders())\n\n    ''\n\n  ###\n  # XhrPromise._handleError(reason, reject, status, statusText)\n  # - reason (String)\n  # - reject (Function)\n  # - status (String)\n  # - statusText (String)\n  ###\n  _handleError: (reason, reject, status, statusText) ->\n    @_detachWindowUnload()\n\n    reject\n      reason:     reason\n      status:     status     or @_xhr.status\n      statusText: statusText or @_xhr.statusText\n      xhr:        @_xhr\n\n  ###\n  # XhrPromise._handleWindowUnload()\n  ###\n  _handleWindowUnload: ->\n    @_xhr.abort()\n\nexport default XhrPromise\n"],"names":["parseHeaders"],"mappings":"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"}