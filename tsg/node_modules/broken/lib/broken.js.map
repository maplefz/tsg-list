{"version":3,"file":"broken.js","sources":["../src/promise-inspection.coffee","../src/utils.coffee","../src/soon.coffee","../src/promise.coffee","../src/helpers.coffee","../src/index.coffee"],"sourcesContent":["export default class PromiseInspection\n  constructor: ({@state, @value, @reason}) ->\n\n  isFulfilled: ->\n    @state is 'fulfilled'\n\n  isRejected: ->\n    @state is 'rejected'\n","# Let the obfiscator compress these down by assigning them to variables\nexport _undefined       = undefined\nexport _undefinedString = 'undefined'\n","import {_undefined, _undefinedString} from './utils'\n\n# See http://www.bluejava.com/4NS/Speed-up-your-Websites-with-a-Faster-setTimeout-using-soon\n# This is a very fast \"asynchronous\" flow control - i.e. it yields the thread\n# and executes later, but not much later. It is far faster and lighter than\n# using setTimeout(fn,0) for yielding threads.  Its also faster than other\n# setImmediate shims, as it uses Mutation Observer and \"mainlines\" successive\n# calls internally.\n#\n# WARNING: This does not yield to the browser UI loop, so by using this\n#          repeatedly you can starve the UI and be unresponsive to the user.\n#\n# This is an even FASTER version of https://gist.github.com/bluejava/9b9542d1da2a164d0456\n# that gives up passing context and arguments, in exchange for a 25x speed\n# increase. (Use anon function to pass context/args)\nsoon = do ->\n  # Function queue\n  fq         = []\n\n  # Avoid using shift() by maintaining a start pointer - and remove items in\n  # chunks of 1024 (bufferSize)\n  fqStart    = 0\n  bufferSize = 1024\n\n  callQueue = ->\n    # This approach allows new yields to pile on during the execution of these\n    while fq.length - fqStart\n      try\n        # No context or args...\n        fq[fqStart]()\n      catch err\n        unless typeof console is 'undefined'\n          console.error err\n\n      # Increase start pointer and dereference function just called\n      fq[fqStart++] = _undefined\n\n      if fqStart == bufferSize\n        fq.splice 0, bufferSize\n        fqStart = 0\n\n    return\n\n  # Run the callQueue function asynchronously, as fast as possible\n  cqYield = do ->\n    # This is the fastest way browsers have to yield processing\n    if typeof MutationObserver != _undefinedString\n      # First, create a div not attached to DOM to 'observe'\n      dd = document.createElement 'div'\n      mo = new MutationObserver callQueue\n      mo.observe dd, attributes: true\n\n      return ->\n        dd.setAttribute 'a', 0\n        return\n\n    # If No MutationObserver - this is the next best thing - handles Node and MSIE\n    if typeof setImmediate != _undefinedString\n      return ->\n        setImmediate callQueue\n        return\n\n    # Final fallback - shouldn't be used for much except very old browsers\n    ->\n      setTimeout callQueue, 0\n      return\n\n\n  # This is the function that will be assigned to soon it takes the function to\n  # call and examines all arguments.\n  (fn) ->\n    # Push the function and any remaining arguments along with context\n    fq.push fn\n\n    # Upon adding our first entry, kick off the callback\n    if fq.length - fqStart == 1\n      cqYield()\n    return\n\nexport default soon\n","# Largely copied from Zousan: https://github.com/bluejava/zousan\nimport PromiseInspection from './promise-inspection'\nimport soon from './soon'\n\n# Let the obfiscator compress these down by assigning them to variables\n_undefined       = undefined\n_undefinedString = 'undefined'\n\n# These are the three possible states (PENDING remains undefined - as intended)\n# a promise can be in.  The state is stored in this.state as read-only\nSTATE_PENDING   = _undefined\nSTATE_FULFILLED = 'fulfilled'\nSTATE_REJECTED  = 'rejected'\n\nresolveClient = (c, arg) ->\n  if typeof c.y == 'function'\n    try\n      yret = c.y.call(_undefined, arg)\n      c.p.resolve yret\n    catch err\n      c.p.reject err\n  else\n    # pass this along...\n    c.p.resolve arg\n  return\n\nrejectClient = (c, reason) ->\n  if typeof c.n == 'function'\n    try\n      yret = c.n.call(_undefined, reason)\n      c.p.resolve yret\n    catch err\n      c.p.reject err\n  else\n    # pass this along...\n    c.p.reject reason\n  return\n\n\nclass Promise\n  constructor: (fn) ->\n    if fn\n      fn (arg) =>\n        @resolve arg\n      , (arg) =>\n        @reject arg\n\n  resolve: (value) ->\n    if @state != STATE_PENDING\n      return\n\n    if value == @\n      return @reject new TypeError 'Attempt to resolve promise with self'\n\n    if value and (typeof value == 'function' or typeof value == 'object')\n      try\n        # First time through?\n        first = true\n        next = value.then\n\n        if typeof next == 'function'\n          # And call the value.then (which is now in \"then\") with value as the\n          # context and the resolve/reject functions per thenable spec\n          next.call value, (ra) =>\n            if first\n              first = false if first\n              @resolve ra\n            return\n          , (rr) =>\n            if first\n              first = false\n              @reject rr\n            return\n          return\n      catch err\n        @reject err if first\n        return\n\n    @state = STATE_FULFILLED\n    @v     = value\n\n    if clients = @c\n      soon =>\n        resolveClient c, value for c in clients\n        return\n    return\n\n  reject: (reason) ->\n    return if @state != STATE_PENDING\n\n    @state = STATE_REJECTED\n    @v     = reason\n\n    if clients = @c\n      soon ->\n        rejectClient c, reason for c in clients\n        return\n    else if !Promise.suppressUncaughtRejectionError and typeof console != 'undefined'\n      console.log 'Broken Promise, please catch rejections: ', reason, if reason then reason.stack else null\n\n    return\n\n  then: (onFulfilled, onRejected) ->\n    p = new Promise\n\n    client =\n      y: onFulfilled\n      n: onRejected\n      p: p\n\n    if @state == STATE_PENDING\n      # We are pending, so client must wait - so push client to end of this.c\n      # array (create if necessary for efficiency)\n      if @c\n        @c.push client\n      else\n        @c = [ client ]\n    else\n      s = @state\n      a = @v\n      soon ->\n        # We are not pending, so yield script and resolve/reject as needed\n        if s == STATE_FULFILLED\n          resolveClient client, a\n        else\n          rejectClient client, a\n        return\n    p\n\n  catch: (cfn) ->\n    @then null, cfn\n\n  finally: (cfn) ->\n    @then cfn, cfn\n\n  timeout: (ms, msg) ->\n    msg = msg or 'timeout'\n\n    new Promise (resolve, reject) =>\n      setTimeout ->\n        # This will fail silently if promise already resolved or rejected\n        reject Error(msg)\n      , ms\n\n      # This will fail silently if promise already timed out\n      @then (val) ->\n        resolve val\n        return\n      , (err) ->\n        reject err\n        return\n      return\n\n  callback: (cb) ->\n    if typeof cb is 'function'\n      @then  (val) -> cb null, val\n      @catch (err) -> cb err, null\n    @\n\nexport default Promise\n","import Promise from './promise'\nimport PromiseInspection from './promise-inspection'\n\nexport resolve = (val) ->\n  z = new Promise\n  z.resolve val\n  z\n\nexport reject = (err) ->\n  z = new Promise\n  z.reject err\n  z\n\nexport all = (ps) ->\n  # Sesults and resolved count\n  results = []\n  rc      = 0\n  retP    = new Promise()\n\n  resolvePromise = (p, i) ->\n    if !p or typeof p.then != 'function'\n      p = resolve(p)\n\n    p.then (yv) ->\n      results[i] = yv\n      rc++\n      if rc == ps.length\n        retP.resolve results\n      return\n\n    , (nv) ->\n      retP.reject nv\n      return\n\n    return\n\n  resolvePromise p, i for p, i in ps\n\n  # For zero length arrays, resolve immediately\n  if !ps.length\n    retP.resolve results\n\n  retP\n\nexport reflect = (promise) ->\n  new Promise (resolve, reject) ->\n    promise\n      .then (value) ->\n        resolve new PromiseInspection\n          state: 'fulfilled'\n          value: value\n      .catch (err) ->\n        resolve new PromiseInspection\n          state: 'rejected'\n          reason: err\n\nexport settle = (promises) ->\n  all promises.map reflect\n","import PromiseInspection from './promise-inspection'\nimport Promise from './promise'\nimport soon from './soon'\nimport {all, reflect, reject, resolve, settle} from './helpers'\n\nPromise.all = all\nPromise.reflect = reflect\nPromise.reject = reject\nPromise.resolve = resolve\nPromise.settle = settle\nPromise.soon = soon\n\nexport default Promise\n"],"names":["_undefined","_undefinedString","Promise","soon","PromiseInspection"],"mappings":"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"}