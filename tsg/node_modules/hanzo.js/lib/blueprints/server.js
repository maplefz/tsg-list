// Generated by CoffeeScript 1.10.0
var blueprints, byId, cart, createBlueprint, fn, i, isFunction, len, model, models, ref, statusCreated, statusNoContent, statusOk;

ref = require('../utils'), isFunction = ref.isFunction, statusCreated = ref.statusCreated, statusNoContent = ref.statusNoContent, statusOk = ref.statusOk;

byId = require('./url').byId;

blueprints = require('./browser');

createBlueprint = function(name) {
  var endpoint, url;
  endpoint = "/" + name;
  url = byId(name);
  return {
    list: {
      url: endpoint,
      method: 'GET'
    },
    get: {
      url: url,
      method: 'GET',
      expects: statusOk
    },
    create: {
      url: endpoint,
      method: 'POST',
      expects: statusCreated
    },
    update: {
      url: url,
      method: 'PATCH',
      expects: statusOk
    },
    "delete": {
      url: url,
      method: 'DELETE',
      expects: statusNoContent
    }
  };
};

models = ['collection', 'coupon', 'order', 'payment', 'product', 'referral', 'referrer', 'review', 'site', 'subscriber', 'subscription', 'transaction', 'token', 'user', 'variant'];

fn = function(model) {
  return blueprints[model] = createBlueprint(model);
};
for (i = 0, len = models.length; i < len; i++) {
  model = models[i];
  fn(model);
}

cart = createBlueprint('cart');

cart.set = blueprints.cart.set;

cart.discard = blueprints.cart.discard;

blueprints.cart = cart;

blueprints.referrer.referrals = {
  url: function(x) {
    var ref1;
    return "/referrer/" + ((ref1 = x.id) != null ? ref1 : x) + "/referrals";
  },
  method: 'GET',
  expects: statusOk
};

blueprints.referrer.transactions = {
  url: function(x) {
    var ref1;
    return "/referrer/" + ((ref1 = x.id) != null ? ref1 : x) + "/transactions";
  },
  method: 'GET',
  expects: statusOk
};

blueprints.order.refund = {
  url: function(x) {
    var ref1;
    return "/order/" + ((ref1 = x.id) != null ? ref1 : x) + "/refund";
  },
  method: 'POST',
  expects: statusOk
};

require('./deploy')(blueprints);

module.exports = blueprints;

//# sourceMappingURL=server.js.map
